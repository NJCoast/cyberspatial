version: '2'
services:
  postgres:
    build:
      context: .
      dockerfile: ./docker_compose/postgis/Dockerfile

  elasticsearch:
    image: elasticsearch

  rabbitmq:
    image: rabbitmq

  django:
    build:
      context: .
      dockerfile: ./docker_compose/django/production/Dockerfile
    ports:
      - "8000:8000"
    command: /start.sh
    depends_on:
      - postgres
      - geoserver
    links:
      - postgres
      - geoserver
    env_file:
      - ./scripts/docker/env/production/django.env

  cyberspatial:
    image: geonode/nginx:geoserver
    links:
      - django
      - geoserver
    ports:
      - "80:80"

  geoserver:
    build:
      context: .
      dockerfile: ./docker_compose/geoserver/Dockerfile
    links:
      - postgres
    depends_on:
      - postgres
    volumes_from:
      - data_dir_conf
    ports:
      - "8080:8080"
    env_file:
      - ./scripts/docker/env/production/geoserver.env

  data_dir_conf:
    image: geonode/geoserver_data:2.9.x-oauth2
    container_name: geoserver_data_dir
    command: /bin/true
    volumes:
      - /geoserver_data/data

volumes:

  geoserver_data_dir:
